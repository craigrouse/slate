<h1 id='implemented-code-examples'>Implemented Code Examples</h1><h2 id='use-case-1-simple-opt-in'>Use Case 1: Simple Opt-in</h2><pre class="highlight swift tab-swift"><code>    <span class="kd">func</span> <span class="nf">setConsentStatusSimple</span><span class="p">(</span><span class="n">_</span> <span class="nv">consented</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">status</span><span class="p">:</span> <span class="kt">TealiumConsentStatus</span> <span class="o">=</span> <span class="n">consented</span> <span class="p">?</span> <span class="o">.</span><span class="nv">consented</span><span class="p">:</span> <span class="o">.</span><span class="n">notConsented</span> 
        <span class="k">self</span><span class="o">.</span><span class="n">tealium</span><span class="p">?</span><span class="o">.</span><span class="nf">consentManager</span><span class="p">()?</span><span class="o">.</span><span class="nf">setConsentStatus</span><span class="p">(</span><span class="n">status</span><span class="p">)</span>
    <span class="p">}</span>
</code></pre>
<p>This example shows you how to give your users a simple &quot;Opt-in/Opt-out&quot; option. If the user consents, they will be automatically opted-in to all tracking categories. If they revoke their consent, no categories will be active, and no tracking calls will be sent.</p>

<p>Define and call the following method in your Tealium Helper class when your app user consents to or declines tracking. If the user consents to tracking, the Consent Manager will automatically opt them in to all tracking categories.</p>

<p><img src="/images/simple-gif.gif" alt="Simple" /></p>
<h2 id='use-case-2-grouped-opt-in'>Use Case 2: Grouped Opt-in</h2><pre class="highlight swift tab-swift"><code><span class="kd">func</span> <span class="nf">updateConsentPreferences</span><span class="p">(</span><span class="n">_</span> <span class="nv">dict</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">:</span> <span class="kt">Any</span><span class="p">])</span> <span class="p">{</span>
    <span class="k">if</span> <span class="k">let</span> <span class="nv">status</span> <span class="o">=</span> <span class="n">dict</span><span class="p">[</span><span class="s">"consentStatus"</span><span class="p">]</span> <span class="k">as?</span> <span class="kt">String</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nv">tealiumConsentCategories</span> <span class="o">=</span> <span class="p">[</span><span class="kt">TealiumConsentCategories</span><span class="p">]()</span>
        <span class="k">let</span> <span class="nv">tealiumConsentStatus</span> <span class="o">=</span> <span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">"consented"</span><span class="p">)</span> <span class="p">?</span> <span class="kt">TealiumConsentStatus</span><span class="o">.</span><span class="nv">consented</span> <span class="p">:</span> <span class="kt">TealiumConsentStatus</span><span class="o">.</span><span class="n">notConsented</span>
        <span class="k">if</span> <span class="k">let</span> <span class="nv">categories</span> <span class="o">=</span> <span class="n">dict</span><span class="p">[</span><span class="s">"consentCategories"</span><span class="p">]</span> <span class="k">as?</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="p">{</span>
            <span class="n">tealiumConsentCategories</span> <span class="o">=</span> <span class="kt">TealiumConsentCategories</span><span class="o">.</span><span class="nf">consentCategoriesStringArrayToEnum</span><span class="p">(</span><span class="n">categories</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="k">self</span><span class="o">.</span><span class="n">tealium</span><span class="p">?</span><span class="o">.</span><span class="nf">consentManager</span><span class="p">()?</span><span class="o">.</span><span class="nf">setConsentStatusWithCategories</span><span class="p">(</span><span class="nv">status</span><span class="p">:</span> <span class="n">tealiumConsentStatus</span><span class="p">,</span> <span class="nv">categories</span><span class="p">:</span> <span class="n">tealiumConsentCategories</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// example function to define groups of categories, and set the consent preferences in the consentManager API. Should be called when the user saves their preferences</span>

<span class="kd">func</span> <span class="nf">setUserConsentPreferences</span><span class="p">(){</span>
    <span class="c1">// define a dictionary containing grouped categories</span>
    <span class="k">let</span> <span class="nv">consentGroups</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Off"</span> <span class="p">:</span> <span class="p">[],</span>
            <span class="s">"Performance"</span><span class="p">:</span> <span class="p">[</span><span class="s">"analytics"</span><span class="p">,</span> <span class="s">"monitoring"</span><span class="p">,</span> <span class="s">"big_data"</span><span class="p">,</span> <span class="s">"mobile"</span><span class="p">,</span> <span class="s">"crm"</span><span class="p">],</span>
            <span class="s">"Marketing"</span><span class="p">:</span> <span class="p">[</span><span class="s">"analytics"</span><span class="p">,</span> <span class="s">"monitoring"</span><span class="p">,</span> <span class="s">"big_data"</span><span class="p">,</span> <span class="s">"mobile"</span><span class="p">,</span> <span class="s">"crm"</span><span class="p">,</span> <span class="s">"affiliates"</span><span class="p">,</span> <span class="s">"email"</span><span class="p">,</span> <span class="s">"search"</span><span class="p">,</span> <span class="s">"engagement"</span><span class="p">,</span> <span class="s">"cdp"</span><span class="p">],</span>
            <span class="s">"Personalized Advertising"</span><span class="p">:</span> <span class="p">[</span><span class="s">"analytics"</span><span class="p">,</span> <span class="s">"monitoring"</span><span class="p">,</span> <span class="s">"big_data"</span><span class="p">,</span> <span class="s">"mobile"</span><span class="p">,</span> <span class="s">"crm"</span><span class="p">,</span> <span class="s">"affiliates"</span><span class="p">,</span> <span class="s">"email"</span><span class="p">,</span> <span class="s">"search"</span><span class="p">,</span> <span class="s">"engagement"</span><span class="p">,</span> <span class="s">"cdp"</span><span class="p">,</span> <span class="s">"display_ads"</span><span class="p">,</span> <span class="s">"personalization"</span><span class="p">,</span> <span class="s">"social"</span><span class="p">,</span> <span class="s">"cookiematch"</span><span class="p">,</span> <span class="s">"misc"</span><span class="p">]]</span>

    <span class="c1">// this is the user's selected preferences level. Would usually be dynamic in a real app</span>
    <span class="k">let</span> <span class="nv">userSelection</span> <span class="o">=</span> <span class="s">"Marketing"</span>

    <span class="k">if</span> <span class="k">let</span> <span class="nv">userList</span> <span class="o">=</span> <span class="n">consentGroups</span><span class="p">[</span><span class="n">userSelection</span><span class="p">]</span> <span class="p">{</span>
      <span class="k">let</span> <span class="nv">settingsDict</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">:</span> <span class="kt">Any</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"consentStatus"</span><span class="p">:</span> <span class="s">"consented"</span><span class="p">,</span> <span class="s">"consentCategories"</span><span class="p">:</span> <span class="n">userList</span><span class="p">]</span>

      <span class="nf">updateConsentPreferences</span><span class="p">(</span><span class="n">settingsDict</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre>
<p>This example shows a category-based consent model, where tracking categories are grouped into a smaller number of higher-level categories, defined by you. For example, you may choose to group the Tealium consent categories &quot;big_data&quot;, &quot;analytics&quot;, and &quot;monitoring&quot; under a single category called &quot;performance&quot;. This may be easier for the user than selecting from the full list of categories. You may choose to represent this in a slider interface, ranging from least-permissive to most-permissive (all categories).</p>

<p><img src="/images/grouped-gif.gif" alt="Group-Based" /></p>
<h2 id='use-case-3-category-based-opt-in'>Use Case 3: Category-based Opt-in</h2><pre class="highlight swift tab-swift"><code><span class="c1">// helper method to call Tealium consentManager API</span>
<span class="kd">func</span> <span class="nf">updateConsentPreferences</span><span class="p">(</span><span class="n">_</span> <span class="nv">dict</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">:</span> <span class="kt">Any</span><span class="p">])</span> <span class="p">{</span>
    <span class="k">if</span> <span class="k">let</span> <span class="nv">status</span> <span class="o">=</span> <span class="n">dict</span><span class="p">[</span><span class="s">"consentStatus"</span><span class="p">]</span> <span class="k">as?</span> <span class="kt">String</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nv">tealiumConsentCategories</span> <span class="o">=</span> <span class="p">[</span><span class="kt">TealiumConsentCategories</span><span class="p">]()</span>
        <span class="k">let</span> <span class="nv">tealiumConsentStatus</span> <span class="o">=</span> <span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">"consented"</span><span class="p">)</span> <span class="p">?</span> <span class="kt">TealiumConsentStatus</span><span class="o">.</span><span class="nv">consented</span> <span class="p">:</span> <span class="kt">TealiumConsentStatus</span><span class="o">.</span><span class="n">notConsented</span>
        <span class="k">if</span> <span class="k">let</span> <span class="nv">categories</span> <span class="o">=</span> <span class="n">dict</span><span class="p">[</span><span class="s">"consentCategories"</span><span class="p">]</span> <span class="k">as?</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="p">{</span>
            <span class="n">tealiumConsentCategories</span> <span class="o">=</span> <span class="kt">TealiumConsentCategories</span><span class="o">.</span><span class="nf">consentCategoriesStringArrayToEnum</span><span class="p">(</span><span class="n">categories</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="k">self</span><span class="o">.</span><span class="n">tealium</span><span class="p">?</span><span class="o">.</span><span class="nf">consentManager</span><span class="p">()?</span><span class="o">.</span><span class="nf">setConsentStatusWithCategories</span><span class="p">(</span><span class="nv">status</span><span class="p">:</span> <span class="n">tealiumConsentStatus</span><span class="p">,</span> <span class="nv">categories</span><span class="p">:</span> <span class="n">tealiumConsentCategories</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// example function to take a list of categories and pass to the Tealium consentManager API</span>

<span class="kd">func</span> <span class="nf">setUserConsentPreferences</span><span class="p">(</span><span class="n">_</span> <span class="nv">categories</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">]){</span>

    <span class="k">let</span> <span class="nv">settingsDict</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">:</span> <span class="kt">Any</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"consentStatus"</span><span class="p">:</span> <span class="s">"consented"</span><span class="p">,</span> <span class="s">"consentCategories"</span><span class="p">:</span> <span class="n">categories</span><span class="p">]</span>  
    <span class="nf">updateConsentPreferences</span><span class="p">(</span><span class="n">settingsDict</span><span class="p">)</span>
<span class="p">}</span>

</code></pre>
<p>This example shows a category-based consent model where the user must explicitly select each category from the full list of categories. The default state is &quot;Not Yet Determined&quot;, which will queue hits until the user provides their consent. If the user consents to any category, events are de-queued, and the consented category data is appended to each tracking call.</p>

<p><img src="/images/individual-gif.gif" alt="Category-Based" /></p>
